// <auto-generated />
using System;
using FileManager.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileManager.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20210305011530_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileManager.Business.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("FileManager.Business.Models.Arquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DiaExecucao1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiaExecucao2")
                        .HasColumnType("datetime2");

                    b.Property<string>("Divisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Esquema")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FrequenciaExecucao")
                        .HasColumnType("int");

                    b.Property<bool>("Posicional")
                        .HasColumnType("bit");

                    b.Property<string>("Prefixo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Tabela")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("FileManager.Business.Models.Campo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArquivoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.ToTable("Campo");
                });

            modelBuilder.Entity("FileManager.Business.Models.Arquivo", b =>
                {
                    b.HasOne("FileManager.Business.Models.ApplicationUser", "User")
                        .WithMany("Arquivos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FileManager.Business.Models.Campo", b =>
                {
                    b.HasOne("FileManager.Business.Models.Arquivo", null)
                        .WithMany("Campos")
                        .HasForeignKey("ArquivoId");
                });
#pragma warning restore 612, 618
        }
    }
}
